c1 <- fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post)
library('bayescount')#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 1000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post)
combinek <- function(a, b) ((a*b)/(a+b+1))
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 1000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=combinek(anik, prek), postk=combinekk(anik, effk, postk), premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post)
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 1000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=combinek(anik, prek), postk=combinekk(anik, effk, postk), premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)
c1
c1$classifications[1:4]
c1$classifications[1:5]
c1$classifications[1:4]#
c2$classifications[1:4]#
c3$classifications[1:4]
c1$classifications[1:4]/cit#
c2$classifications[1:4]/cit#
c3$classifications[1:4]/cit
round(c1$classifications[1:4]/cit, 2)
100*round(c1$classifications[1:4]/cit, 3)
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c2$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=combinek(anik, prek), postk=combinekk(anik, effk, postk), premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c2$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 1000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)
kpre
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))
mean(pre)
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))
mean(pre)
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))
mean(pre)
post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))
post
reduction
premean*(1-reduction)
post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))
mean(post)
names(c3)
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))#
	red[i] <- (mean(post)/mean(pre)) * (edt_pre/edt_post)#
}#
summary(red)#
summary(c3$obsred)
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))#
	red[i] <- 1 - (mean(post)/mean(pre)) * (edt_pre/edt_post)#
}#
summary(red)#
summary(c3$obsred)
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))#
	red[i] <- 1 - (mean(post)/mean(pre)) * (edt_post/edt_pre)#
}#
summary(red)#
summary(c3$obsred)
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))#
	red[i] <- (mean(post)/mean(pre)) * (edt_post/edt_pre)#
}#
summary(red)#
summary(c3$obsred)
plot.ecdf(red, c3$obsred)
qqplot(red, c3$obsred)
qqplot(red, c3$obsred); abline(0,1)
t.test(red, c3$obsred)
t.test(red, c3$obsred)$p.value
?t-test
?t.test
t.test(c3$obsred, mu=reduction)
t.test(c3$obsred, mu=(1-reduction))
(1-reduction)
c3$obsred
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))#
	red[i] <- (mean(post)/mean(pre)) * (edt_pre/edt_post)#
}
summary(red)
reduction
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))#
	red[i] <- 1 - (mean(post)/mean(pre)) * (edt_pre/edt_post)#
}#
summary(red)
mean(post)
mean(pre)
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 1000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)
preN=postN <- 10000
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre))#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post))
(mean(post)/mean(pre))
(edt_pre/edt_post)
(mean(post)/mean(pre)) * (edt_post/edt_pre)
1 - (mean(post)/mean(pre)) * (edt_post/edt_pre)
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre)) * edt_pre
pre
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre)) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post)) * edt_post
1 - (mean(post)/mean(pre))
pre <- rnbinom(preN, kpre, mu=premean/(kpre*edt_pre)) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/(kpost*edt_post)) * edt_post
1 - (mean(post)/mean(pre))
(1-reduction)
kpre
kpost
pre <- rnbinom(preN, kpre, mu=premean/edt_pre) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post) * edt_post
1 - (mean(post)/mean(pre))
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 1000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c2$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
#
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post) * edt_post#
	red[i] <- 1 - (mean(post)/mean(pre))#
}#
summary(red)#
summary(c3$obsred)
rit <- 10000
red <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post) * edt_post#
	red[i] <- 1 - (mean(post)/mean(pre))#
}#
summary(red)#
summary(c3$obsred)
qqplot(red, c3$obsred); abline(0,1)
t.test(c3$obsred, mu=(1-reduction))
t.test(c3$obsred, mu=reduction)
c3$obsred
mean(c3$obsred-reduction)
summary(red)#
summary(c3$obsred)#
qqplot(red, c3$obsred); abline(0,1)#
t.test(red, c3$obsred)$p.value
summary(red)
summary(c3$obsred)
stopifnot(t.test(red, c3$obsred)$p.value > 0.05)
summary(c3$obsred)
stopifnot(abs(mean(c3$obsred-reduction)) < 0.01)
chisq.test(c1$classifications[1:4], c3$classifications[1:4])
chisq.test(c1$classifications[1:4], c3$classifications[1:4])$p.value
fisher.test(c1$classifications[1:4], c3$classifications[1:4])$p.value
c1$classifications[1:4]
chisq.test(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)])$p.value
c3$classifications[c(1,2,4)]
c1$classifications[c(1,2,4)]
chisq.test(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)])$p.value
suppressWarnings(chisq.test(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)])$p.value)
stopifnot(suppressWarnings(chisq.test(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)])$p.value) > 0.05)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c2$classifications[1:4]/cit, 3)
100*round(c2$classifications[1:4]/cit, 3)
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(suppressWarnings(chisq.test(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)])$p.value) > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)#
#
creds <- c3$obsred#
stopifnot(abs(mean(creds-reduction)) < 0.01)#
#
reds <- numeric(rit)#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post) * edt_post#
	reds[i] <- 1 - (mean(post)/mean(pre))#
}#
summary(reds)#
summary(creds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)
i=1
r_class <- numeric(4)
pre <- rnbinom(preN, kpre, mu=premean/edt_pre) * edt_pre#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post) * edt_post#
	reds[i] <- 1 - (mean(post)/mean(pre))
pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=re_pre, rep_post=rep_post)
pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))
pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=re_pre, rep_post=rep_post)
pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)
pv
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}
pv
get_type_pv(pv$p_1, pv$p_2)
c_class <- c3$classifications[1:4]
chisq.test(r_class, c_class()
chisq.test(r_class, c_class)
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1#
}#
summary(reds)#
summary(creds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)#
#
chisq.test(r_class, c_class)
stopifnot(suppressWarnings(chisq.test(r_class, c_class)) > 0.05)
stopifnot(suppressWarnings(chisq.test(r_class, c_class)$p.value) > 0.05)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post
ctmeans <- rgamma(preN, anik, scale=anik/premu)#
	txmeans <- rgamma(preN, txk, scale=txk/postmu)
ctmeans <- rgamma(preN, anik, scale=anik/premu)#
	txmeans <- rgamma(postN, txk, scale=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))
pre
post
premu
ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)
ctmeans¨
ctmeans
pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))
pre
post
1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))
reduction
pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(reds)#
summary(creds)
qqplot(red, creds); abline(0,1)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(reds)#
summary(creds)
qqplot(red, creds); abline(0,1)
stopifnot(t.test(red, creds)$p.value > 0.05)
stopifnot(suppressWarnings(chisq.test(r_class[c(1,2,4)], c_class[c(1,2,4)])$p.value) > 0.05)
r_class#
c_class
r_class/rit#
c_class/cit
chisq.test(r_class[c(1,2,4)], c_class[c(1,2,4)])
r_class
c_class
fisher.test(r_class[c(1,2,4)], c_class[c(1,2,4)])$p.value
chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))$p.value > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)
chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(reds)#
summary(creds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
r_class#
c_class
r_class/rit#
c_class/cit
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))$p.value > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(reds)#
summary(creds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))$p.value > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	r_reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(reds)#
summary(creds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
summary(r_reds)#
summary(c_reds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)
r_class/rit#
c_class/cit
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(reds)#
summary(creds)#
# qqplot(red, creds); abline(0,1)#
stopifnot(t.test(red, creds)$p.value > 0.05)
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)
qqplot(r_reds, c_reds); abline(0,1)
reds
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.75#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)
mean(c_reds-reduction)
summary(c_reds)
reduction
premeans <- rgamma(preN, anik, rate=anik/premu)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x] / edt_pre))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x] / edt_post))))
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.05)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premu)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x] / edt_pre))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
qqplot(r_reds, c_reds); abline(0,1)
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.05)
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premu)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x] / edt_pre))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x] / edt_pre))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:preN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)
qqplot(r_reds, c_reds); abline(0,1)
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
premeans
postmeans
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 1#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.05)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 1#
edt_post <- 0.75#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
summary(r_reds)#
summary(c_reds)
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.75#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.05)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))$p.value > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	r_reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.75#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.02)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.1#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.02)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))$p.value > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	r_reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
##### Unpaired with replicates#
#
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
##### Paired with replicates#
#
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.1#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.02)
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.1#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=3, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
qqplot(r_reds, c_reds); abline(0,1)
# Ensure results are replicable:#
set.seed(2017-08-29)#
#
library('bayescount')#
#
combinek <- function(a, b) ((a*b)/(a+b+1))#
combinekk <- function(a, b, c) combinek(a, combinek(b, c))#
#
get_type_pv <- function(p1, p2, s=0.025){#
  if(p2 <= s && p1 > s){#
    tp <- "Reduced Efficacy"#
	nr <- 1#
  }else if(p2 > s && p1 > s){#
    tp <- "Inconclusive"#
	nr <- 2#
  }else if(p2 <= s && p1 <= s){#
    tp <- "Marginal Efficacy"#
	nr <- 3#
  }else if(p2 > s && p1 <= s){#
    tp <- "Adequate Efficacy"#
	nr <- 4#
  }else{#
    stop('Error assigning type')#
  }#
  return(nr)#
}#
# Test a simple unpaired model:#
cit <- 100000#
rit <- 10000#
#
anik <- 2#
effk <- 2#
prek <- 3#
postk <- 3#
#
preN <- 20#
postN <- 20#
premean <- 10#
#
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 0.5#
edt_post <- 0.25#
#
reduction <- 0.88#
#### Simple unpaired test#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
c3 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=Inf, efficacyk=Inf, prek=kpre, postk=kpost, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c1$classifications[1:4]/cit, 3)#
100*round(c3$classifications[1:4]/cit, 3)#
stopifnot(chisq.test(rbind(c1$classifications[c(1,2,4)], c3$classifications[c(1,2,4)]))$p.value > 0.05)#
# Expected to be slightly different:#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c3$obsred#
c_class <- c3$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
for(i in 1:rit){#
	pre <- rnbinom(preN, kpre, mu=premean/edt_pre)#
	post <- rnbinom(postN, kpost, mu=(premean*(1-reduction))/edt_post)#
	r_reds[i] <- 1 - ((mean(post) * edt_post) / (mean(pre) * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)#
##### Unpaired with replicates#
#
rep_pre <- 2#
rep_post <- 5#
edt_pre <- 0.25#
edt_post <- 0.5#
#
te <- try(c1 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit), silent=TRUE)#
stopifnot(inherits(te, 'try-error'))#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=1, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
100*round(c2$classifications[1:4]/cit, 3)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
txk <- combinek(anik, effk)#
premu <- premean/edt_pre#
postmu <- (premean * (1-reduction)) / edt_post#
for(i in 1:rit){#
	ctmeans <- rgamma(preN, anik, rate=anik/premu)#
	txmeans <- rgamma(postN, txk, rate=txk/postmu)#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)#
##### Paired with replicates#
#
rep_pre <- 3#
rep_post <- 4#
edt_pre <- 1#
edt_post <- 0.1#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=2, preN=preN, postN=postN, animalk=anik, efficacyk=effk, prek=prek, postk=postk, premean=premean, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)#
for(i in 1:rit){#
	premeans <- rgamma(preN, anik, rate=anik/premean)#
	postmeans <- premeans * rgamma(postN, effk, rate=effk/(1-reduction))#
	pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu= premeans[x] / edt_pre))))#
	post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu= postmeans[x] / edt_post))))#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 1#
edt_post <- 0.1#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, premean=premean, poolsize_pre=5, poolsize_post=2, animalk=anik, efficacyk=effk, prek=prek, postk=postk, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
stopifnot(preN==postN)
i=1
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 1#
edt_post <- 0.1#
poolsize_pre <- 5#
poolsize_post <- 2#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, premean=premean, poolsize_pre=poolsize_pre, poolsize_post=poolsize_post, animalk=anik, efficacyk=effk, prek=prek, postk=postk, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)
premeans <- matrix(rgamma(preN*poolsize_pre, anik, rate=anik/premean), ncol=poolsize_pre, nrow=preN)
premeans <- matrix(rgamma(preN*poolsize_pre, kpre, rate= kpre/premean), ncol=poolsize_pre, nrow=preN)#
	postmeans <- matrix(rgamma(postN*poolsize_post, kpost, rate= kpost/premean), ncol=poolsize_post, nrow=postN)
premeans
postmeans
apply(premeans, 2, mean)
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 1#
edt_post <- 0.1#
poolsize_pre <- 5#
poolsize_post <- 2#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, premean=premean, poolsize_pre=poolsize_pre, poolsize_post=poolsize_post, animalk=anik, efficacyk=effk, prek=prek, postk=postk, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
stopifnot(preN==postN)#
for(i in 1:rit){	#
	premeans <- matrix(rgamma(preN*poolsize_pre, kpre, rate= kpre/premean), ncol=poolsize_pre, nrow=preN)#
	postmeans <- matrix(rgamma(postN*poolsize_post, kpost, rate= kpost/premean), ncol=poolsize_post, nrow=postN)#
	pre <- rpois(preN, apply(premeans, 1, mean) / edt_pre)#
	post <- rpois(postN, apply(postmeans, 1, mean) / edt_post)#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)
kpre
kpost
pre
post
premeans <- matrix(rgamma(preN*poolsize_pre, kpre, rate= kpre/premean), ncol=poolsize_pre, nrow=preN)#
	postmeans <- matrix(rgamma(postN*poolsize_post, kpost, rate= kpost/((1-reduction)*premean)), ncol=poolsize_post, nrow=postN)#
	pre <- rpois(preN, apply(premeans, 1, mean) / edt_pre)#
	post <- rpois(postN, apply(postmeans, 1, mean) / edt_post)#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)
rep_pre <- 1#
rep_post <- 1#
edt_pre <- 1#
edt_post <- 0.1#
poolsize_pre <- 5#
poolsize_post <- 2#
#
c2 <- bayescount:::fecrt_power_wrap(reduction, pair_type=0, preN=preN, postN=postN, premean=premean, poolsize_pre=poolsize_pre, poolsize_post=poolsize_post, animalk=anik, efficacyk=effk, prek=prek, postk=postk, rep_pre=rep_pre, rep_post=rep_post, edt_pre=edt_pre, edt_post=edt_post, iterations=cit)#
#
c_reds <- c2$obsred#
c_class <- c2$classifications[1:4]#
# Bigger discrepancy between population and sample mean reductions:#
stopifnot(abs(mean(c_reds-reduction)) < 0.01)#
#
r_reds <- numeric(rit)#
r_class <- numeric(4)#
#
kpre <- combinek(anik, prek)#
kpost <- combinekk(anik, effk, postk)#
#
stopifnot(preN==postN)#
for(i in 1:rit){	#
	premeans <- matrix(rgamma(preN*poolsize_pre, kpre, rate= kpre/premean), ncol=poolsize_pre, nrow=preN)#
	postmeans <- matrix(rgamma(postN*poolsize_post, kpost, rate= kpost/((1-reduction)*premean)), ncol=poolsize_post, nrow=postN)#
	pre <- rpois(preN, apply(premeans, 1, mean) / edt_pre)#
	post <- rpois(postN, apply(postmeans, 1, mean) / edt_post)#
	r_reds[i] <- 1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))#
	pv <- bayescount:::fecrt_pee_wrap(pre, post, edt_pre=edt_pre, edt_post=edt_post, rep_pre=rep_pre, rep_post=rep_post)#
	r_class[get_type_pv(pv$p_1, pv$p_2)] <- r_class[get_type_pv(pv$p_1, pv$p_2)]+1	#
}#
summary(r_reds)#
summary(c_reds)#
reduction#
# qqplot(r_reds, c_reds); abline(0,1)#
stopifnot(t.test(r_reds, c_reds)$p.value > 0.05)#
#
r_class/rit#
c_class/cit#
stopifnot(chisq.test(rbind(r_class[c(1,2,4)], c_class[c(1,2,4)]))$p.value > 0.05)
pre <- sapply(1:preN, function(x) return(sum(rnbinom(rep_pre, prek, mu=ctmeans[x]))))
pre
post <- sapply(1:postN, function(x) return(sum(rnbinom(rep_post, postk, mu=txmeans[x]))))
post
pre <- rpois(preN, apply(premeans, 1, mean) / edt_pre)
pre
post <- rpois(postN, apply(postmeans, 1, mean) / edt_post)
post
var(pre)
mean(pre)
premean
post <- rpois(postN, apply(postmeans, 1, mean) / edt_post)
pre
post
1 - ((mean(post)/rep_post * edt_post) / (mean(pre)/rep_pre * edt_pre))
source("/Users/matthewdenwood/Documents/Code/R/myrpackages/bayescount/tests/test_power.R")
qqplot(r_reds, c_reds); abline(0,1)
summary(r_reds)#
summary(c_reds)
